buildscript {
    repositories {
        //使用本地maven仓库
        mavenLocal()
        //阿里云Maven镜像
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.4.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: "maven-publish"
apply plugin: "io.spring.dependency-management"

group = "org.example"
version = "1.0"
archivesBaseName = 'springboot-mosquito'


tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
}

configurations.all{
    resolutionStrategy(){
        //将冲突解决策略改为发生冲突时报错
        failOnVersionConflict()
        force "org.slf4j:slf4j-api:1.7.30"
    }
}

// 冲突报错 + 以下任务 + 命令行搜索
// gradlew allDepInsight  --configuration compile --dependency ${keyword}
//可以搜索出某个jar包被哪些依赖引用，然后用于解决依赖冲突
//subprojects和allprojects的效果一样
task allDepInsight(type: DependencyInsightReportTask){
    doFirst {}
}

repositories {
    mavenLocal()
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
    mavenCentral()
}

dependencyManagement {
    imports {
//        mavenBom("com.aero:aero-parent:${parentVersion}")
    }
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


dependencies {

    /**web-starter*/
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude group:"org.springframework.boot", module: "spring-boot-starter-logging"
        exclude group:"org.jboss.logging", module: "jboss-logging"
    }

    /**log4j2*/
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'

    /**websocket*/
    compile('org.springframework.boot:spring-boot-starter-websocket'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

//    /**integration*/
//    compile("org.springframework.boot:spring-boot-starter-integration"){
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//    }
//
//    /**integration-stream*/
//    compile("org.springframework.integration:spring-integration-stream")
//
//    /**integration-mqtt*/
//    compile("org.springframework.integration:spring-integration-mqtt")

    // lombok
    compile group: 'org.projectlombok', name: 'lombok'
    annotationProcessor "org.projectlombok:lombok"

    testCompile group: 'junit', name: 'junit'
}

